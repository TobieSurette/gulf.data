% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/growth.R
\name{growth}
\alias{growth}
\alias{growth.default}
\title{Biological Growth Functions}
\usage{
growth(x, ...)

\method{growth}{default}(x, species, sex, theta, error = FALSE, density = FALSE, ...)
}
\arguments{
\item{x}{Specimen size, length-frequency or other object.}

\item{species}{Species.}

\item{sex}{Biological sex.}

\item{theta}{Named parameter for growth model.}

\item{error}{Logical value specifying whether to return the estimated standard error associated with growth. 
Note that this does not correspond to estimation error, but rather the prediction error.}

\item{n}{Length-frequencies}
}
\value{
If \code{x} is left unspecified, then a function is returned which can be used for evaluating 
        growth for given size inputs.
}
\description{
Animal growth can be expressed in various ways. Fish species growth is generally modeled as 
             length-at-age, while crustacean growth is normally modeled as growth-at-moult size increment, 
             i.e. the expected size increase. An common example of a fish growth model is the von Bertalanffy 
             curve. For crustaceans, the discrete nature of growth and maturation frequently induce a stepwise 
             behaviour. Thus, crustacean growth-at-moult increments are well modeled by a two-component piecewise 
             linear model, with the first component describing immature growth, which is relatively fast, and the 
             second component describing adolescent and mature growth, which has a lower relative growth rate.
}
\section{Methods (by class)}{
\itemize{
\item \code{growth(default)}: Default growth function.

}}
\note{
Note that growth increments are returned rather than the new size.
}
\examples{
# Snow crab growth parameters:
theta <- c(intercept = 0.276, transition = 38.2, slope = c(0.32, 0.126), window = 1.6, log_sigma = -2)
x <- seq(10, 120)
y <- growth(x, theta = theta, error = TRUE) # Include error estimate in the output.  
plot(x, y$mu, type = "l")
lines(x, y$mu - y$sigma, lty = "dashed")
lines(x, y$mu + y$sigma, lty = "dashed")
}
